package jun03;
//객체지향
/* OOP특징
 * 
 * 		캡슐화 = 보안 = 보호
 * 				관련된 데이터(필드)와 기능(메소드)가 하나의 묶음으로 관리
 * 
 * 		상속
 * 				이미 작성된 클래스(부모)를 이어받아서 새롭게 만드는 것
 * 				자식 클래스는 부모 클래스의 모든 속성(필드)과 동작(메소드)
 * 				를 사용할 수 있습니다.
 * 				필요한 기능은 자식 클래스에서 추가해서 사용합니다.
 * 
 * 		추상화
 * 				불필요한 것을 제외하고 필요한 것만 유지합니다.
 * 				실제 겍체를 인스턴스화 할때 필요한 내용만 남기고
 * 				나머지는 제외하는 것 입니다.
 * 
 * 		다형성
 * 				객체의 동작이 변경되는 것
 * 				파라미너타 상황에 따라 동작이 변경되는 것
 * 
 * 
 *  
 */
public class OOP08 {
	public static void main(String[] args) {//사과 배 포도
		
		if(args[0].equals("사과")) {
			System.out.println("사과라고 입력했습니다.");
		}
		
		for (int i = 0; i < args.length; i++) {
			System.out.println(args[i]);
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
}
